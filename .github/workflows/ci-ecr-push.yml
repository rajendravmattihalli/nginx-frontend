# nginx-frontend - workflow for Build Docker image and push to AWS - ECR

name: CI - Build and Push Docker Image to ECR
on:
  push:
    branches:
      - main

permissions:
  contents: read
  id-token: write 
  packages: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    env:
      AWS_REGION: east-us-1                 
      ECR_REPOSITORY: nginx-frontend        
      IMAGE_TAG: ${{ github.sha }}          

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # üîê Configure AWS credentials using OIDC (no secrets needed)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::<ACCOUNT_ID>:role/GitHubActionsECRRole
          aws-region: ${{ env.AWS_REGION }}

      # ü™£ Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # üèóÔ∏è Build, Tag, and Push Docker Image
      - name: Build, Tag, and Push Image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} ../docker-multistage/.
          docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Tag and Push 'latest'
        if: github.ref == 'refs/heads/main'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker tag $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} \
                     $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:latest
          docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:latest
          

                     $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:latest
          docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:latest
